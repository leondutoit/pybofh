#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2010 University of Oslo, Norway
#
# This file is part of PyBofh.
#
# PyBofh is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PyBofh is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PyBofh; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

import getpass
import locale
import sys

import bofh
from bofh import readlineui

encoding = locale.getpreferredencoding()
user = getpass.getuser()
url = bofh.get_default_url()
prompt = ''

try:
    import argparse
    Parser = argparse.ArgumentParser
except ImportError:
    # unfortunately we need python 2.5 support:
    # load optparse and monkey patch it to have add_argument
    import optparse
    Parser = optparse.OptionParser
    Parser.add_argument = Parser.add_option

if sys.argv[1:]:
    argp = Parser(description=u"The Cerebrum Bofh client")
    argp.add_argument('-u', '--user', default=user, help=u"Username")
    argp.add_argument('--url', default=url, help=u"URL to the server")
    argp.add_argument('--prompt', default=prompt, help=u"Custom prompt")

    args = argp.parse_args()
    if isinstance(args, tuple):
        args = args[0]

    user, url, prompt = args.user, args.url, args.prompt

print (u"""PyBofh version %s\nBofhd server is at %s""" % (
    (bofh.version.version).encode(locale.getpreferredencoding()),
    url))

try:
    conn = bofh.connect(
        username=user,
        password=getpass.getpass(prompt="Password for %s: " % user),
        url=url)
except bofh.proto.BofhError, e:
    print e.args[0]
    sys.exit(1)

print conn.motd
try:
    readlineui.repl(conn, prompt=prompt)
except:
    conn.logout()
