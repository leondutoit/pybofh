#!/usr/bin/env python
# -*- coding: utf-8 -*-

# Copyright 2010-2018 University of Oslo, Norway
#
# This file is part of PyBofh.
#
# PyBofh is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# PyBofh is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with PyBofh; if not, write to the Free Software Foundation,
# Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

import getpass
import locale
from urlparse import urlparse

import bofh.readlineui
import bofh.version
import bofh.proto

encoding = locale.getpreferredencoding()
encode = lambda s, e=encoding: s.encode(e)

try:
    import argparse
except ImportError:
    from bofh.ext import argparse

argp = argparse.ArgumentParser(description=u"The Cerebrum Bofh client")
argp.add_argument('-u', '--user',
                  default=getpass.getuser(),
                  metavar='UNAME',
                  help=u"username")
argp.add_argument('--url',
                  default=None,
                  metavar='URL',
                  help=u"URL of a bofhd server.")
argp.add_argument('-c', '--cert',
                  default=None,
                  metavar='PEM',
                  help=u"CA certificate in PEM-format.")
argp.add_argument('--insecure',
                  default=False,
                  action='store_true',
                  help=u"Do not perform certificate checks.")
argp.add_argument('-p', '--prompt',
                  default='',
                  metavar='PROMPT',
                  help=u"Custom prompt")
args = argp.parse_args()


def complete_url(url):
    u"""Add default protocol and port number to url if these were omitted
    when entered from the command line. This is not meant to handle all
    url-variants that users may enter, but for allowing short-hand urls
    when developing/testing, (like: cere-utv01:8962, or cerebrum-uio.uio.no)

    :type: url: str
    :param url: Some url to a bofhd-instance.

    :rtype: str
    :return: An url with protocol and port.

    """
    if url is not None:
        # Pre-2.7 versions of urlparse will fail if no protocol
        # prefix is present.
        if '://' not in url:
            url = ''.join((bofh.get_default_protocol(), '://', url))

        url_parts = urlparse(url)
        if url_parts.port is None:
            url = ''.join((url, ':', bofh.get_default_port()))
    return url


print encode(u"Connecting to {}\n".format(complete_url(args.url)))

try:
    conn = bofh.connect(url=complete_url(args.url),
                        cert=args.cert,
                        insecure=args.insecure)
    print encode(u'{}\n'.format(conn.motd))
    conn.login(args.user,
               getpass.getpass(u'Password for {}:'.format(args.user)))
except (KeyboardInterrupt, EOFError):
    print ""
    raise SystemExit
except bofh.proto.BofhError, e:
    raise SystemExit(u'{}'.format(e.args[0]))

try:
    bofh.readlineui.repl(conn, prompt=args.prompt)
except Exception, e:
    print encode(u'Error: {}'.format(e))
finally:
    conn.logout()
